{"version":3,"sources":["../../src/controller/account.js"],"names":["config","db","api","post","req","res","UserDataExt","findUserByEmail","body","email","err","userData","status","json","message","Account","register","username","password","account","passport","authenticate","session","send","next","scope","failWithError","generateAccessToken","respond","get","logout","user"],"mappings":";;;;;;AAAA;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;kBAEe,gBAAoB;AAAA,MAAjBA,MAAiB,QAAjBA,MAAiB;AAAA,MAATC,EAAS,QAATA,EAAS;;AACjC,MAAIC,MAAM,sBAAV;;AAEA;AACAA,MAAIC,IAAJ,CAAS,WAAT,EAAsB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClCC,0BAAYC,eAAZ,CAA4BH,IAAII,IAAJ,CAASC,KAArC,EAA4C,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC7D,UAAID,GAAJ,EAAS;AACPL,YAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,gCAA8BJ,IAAII,OAApC,EAArB;AACD,OAFD,MAEO,IAAIH,QAAJ,EAAc;AACnBN,YAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,oBAAkBV,IAAII,IAAJ,CAASC,KAA3B,2BAAF,EAArB;AACD,OAFM,MAEA;AACLM,0BAAQC,QAAR,CAAiB,IAAID,iBAAJ,CAAY,EAAEE,UAAUb,IAAII,IAAJ,CAASC,KAArB,EAAZ,CAAjB,EAA4DL,IAAII,IAAJ,CAASU,QAArE,EAA+E,UAASR,GAAT,EAAcS,OAAd,EAAuB;AACpG,cAAGT,GAAH,EAAQ;AACNL,gBAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,SAASJ,GAAX,EAArB;AACD,WAFD,MAEO;AACLU,+BAASC,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAA/B,EAAmDlB,GAAnD,EAAwDC,GAAxD,EAA6D,YAAM;AACjEA,kBAAIO,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqB,kCAArB;AACD,aAFD;AAGD;AACF,SARD;AASD;AACF,KAhBD;AAiBD,GAlBD;;AAoBA;AACArB,MAAIC,IAAJ,CAAS,QAAT,EAAmB,UAACC,GAAD,EAAMC,GAAN,EAAWmB,IAAX,EAAoB;AACvClB,0BAAYC,eAAZ,CAA4BH,IAAII,IAAJ,CAASC,KAArC,EAA4C,UAACC,GAAD,EAAMC,QAAN,EAAmB;AAC3D,UAAID,GAAJ,EAAS;AACPL,YAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,gCAA8BJ,IAAII,OAApC,EAArB;AACD,OAFD,MAEO;AACTU;AACA;AACC,KANH;AAOA,GARA,EAQEJ,mBAASC,YAAT,CAAsB,OAAtB,EAA+B,EAAEC,SAAS,KAAX,EAAkBG,OAAO,EAAzB,EAA6BC,eAAe,IAA5C,EAA/B,CARF,EAQsF,UAAChB,GAAD,EAAMN,GAAN,EAAWC,GAAX,EAAgBmB,IAAhB,EAAyB;AAC/G,QAAId,GAAJ,EAAS;AACRL,UAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,mEAAF,EAArB;AACA;AACD,GAZA,EAYEa,mCAZF,EAYuBC,uBAZvB;;AAcA;AACA1B,MAAI2B,GAAJ,CAAQ,SAAR,EAAmBR,4BAAnB,EAAiC,UAACjB,GAAD,EAAMC,GAAN,EAAc;AAC7CA,QAAIyB,MAAJ;AACAzB,QAAIO,MAAJ,CAAW,GAAX,EAAgBW,IAAhB,CAAqB,yBAArB;AACD,GAHD;;AAKArB,MAAI2B,GAAJ,CAAQ,KAAR,EAAeR,4BAAf,EAA6B,UAACjB,GAAD,EAAMC,GAAN,EAAc;AACzCA,QAAIO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBT,IAAI2B,IAAzB;AACD,GAFD;;AAIA,SAAO7B,GAAP;AACD,C","file":"account.js","sourcesContent":["import mongoose from 'mongoose';\nimport { Router } from 'express';\nimport bodyParser from 'body-parser';\nimport passport from 'passport';\nimport config from '../config';\nimport Account from '../model/account';\nimport UserDataExt from './extensions/userData-ext';\n\nimport { generateAccessToken, respond, authenticate } from '../middleware/authMiddleware';\n\nexport default ({ config, db }) => {\n  let api = Router();\n\n  // '/v1/account/register'\n  api.post('/register', (req, res) => {\n    UserDataExt.findUserByEmail(req.body.email, (err, userData) => {\n      if (err) {\n        res.status(409).json({ message: `An error occured: ${err.message}`});\n      } else if (userData) {\n        res.status(300).json({ message: `Email ${req.body.email} is already registered`});\n      } else {\n        Account.register(new Account({ username: req.body.email }), req.body.password, function(err, account) {\n          if(err) {\n            res.status(500).json({ message: err });\n          } else {\n            passport.authenticate('local', { session: false })(req, res, () => {\n              res.status(200).send('Successfully created new account');\n            });\n          }\n        });\n      }\n    });\n  });\n\n  // '/v1/account/login'\n  api.post('/login', (req, res, next) => {\n\t\tUserDataExt.findUserByEmail(req.body.email, (err, userData) => {\n      if (err) {\n        res.status(409).json({ message: `An error occured: ${err.message}`});\n      } else {\n\t\t\t\tnext();\n\t\t\t}\n    });\n\t}, passport.authenticate('local', { session: false, scope: [], failWithError: true }), (err, req, res, next) => {\n\t\tif (err) {\n\t\t\tres.status(401).json({ message: `Email or password invalid, please check your credentials`});\n\t\t}\n\t}, generateAccessToken, respond);\n\n  // '/v1/account/logout'\n  api.get('/logout', authenticate, (req, res) => {\n    res.logout();\n    res.status(200).send('Successfully logged out');\n  });\n\n  api.get('/me', authenticate, (req, res) => {\n    res.status(200).json(req.user);\n  });\n\n  return api;\n}\n"]}